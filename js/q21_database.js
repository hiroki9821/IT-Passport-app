export const q21_database = [
  {
    question: "データベース（DB）の主な目的はどれか？",
    choices: [
      "データを効率よく管理・活用すること",
      "データを常に手作業で記録すること",
      "必ず紙で保存すること",
      "データの圧縮だけを行うこと"
    ],
    answer: "データを効率よく管理・活用すること",
    explanation: "データベースは大量の情報を効率的かつ安全に保存・管理・活用するための仕組み。"
  },
  {
    question: "リレーショナルデータベース（RDB）の特徴はどれか？",
    choices: [
      "表（テーブル）でデータを管理する",
      "必ず木構造で管理する",
      "データを暗号化して管理する",
      "音声だけで管理する"
    ],
    answer: "表（テーブル）でデータを管理する",
    explanation: "RDBはテーブル同士の関連性（リレーション）でデータを整理する。"
  },
  {
    question: "“テーブル”とは何か？",
    choices: [
      "行と列で構成されるデータの表",
      "必ず1つのデータだけを保存する箱",
      "圧縮ファイルの種類",
      "プログラムの実行場所"
    ],
    answer: "行と列で構成されるデータの表",
    explanation: "テーブルはExcelの表と同様に、行（レコード）と列（フィールド）からなる。"
  },
  {
    question: "“レコード”とはどれか？",
    choices: [
      "テーブルの1行分に該当するデータの集合",
      "必ず1列分だけのデータ",
      "画像ファイルの一種",
      "ネットワークの経路情報"
    ],
    answer: "テーブルの1行分に該当するデータの集合",
    explanation: "レコードは個々のデータ（例えば1人分の顧客情報など）を表す。"
  },
  {
    question: "“フィールド”とはどれか？",
    choices: [
      "テーブルの各列に該当するデータ項目",
      "必ず1行分のデータ",
      "暗号化キーのこと",
      "データベースの設計者名"
    ],
    answer: "テーブルの各列に該当するデータ項目",
    explanation: "フィールドは氏名、住所、電話番号など項目名ごとのデータを指す。"
  },
  {
    question: "“主キー（プライマリキー）”の役割はどれか？",
    choices: [
      "テーブル内で各レコードを一意に識別するための項目",
      "必ず暗号化のために使う項目",
      "テーブルのデータを削除するためのキー",
      "圧縮ファイルを解凍するための項目"
    ],
    answer: "テーブル内で各レコードを一意に識別するための項目",
    explanation: "主キーは重複しない値で、データの一意性を保証する。"
  },
  {
    question: "“外部キー（外部参照キー）”の説明はどれか？",
    choices: [
      "別のテーブルの主キーを参照するための項目",
      "暗号化キーの一種",
      "テーブルの行数を数えるキー",
      "プログラムのパスワード"
    ],
    answer: "別のテーブルの主キーを参照するための項目",
    explanation: "外部キーはデータベース間の関連性（リレーション）を作るのに使われる。"
  },
  {
    question: "“正規化”の目的として最も適切なものはどれか？",
    choices: [
      "データの重複や矛盾を防ぐために表を分割・整理する",
      "必ずデータを暗号化する",
      "圧縮率を上げるための処理",
      "データのすべてを1つのテーブルにまとめる"
    ],
    answer: "データの重複や矛盾を防ぐために表を分割・整理する",
    explanation: "正規化はデータ構造をシンプルかつ一貫性あるものに整える手法。"
  },
  {
    question: "“第1正規形（1NF）”の特徴はどれか？",
    choices: [
      "すべてのフィールドが単一の値のみを持つ",
      "必ず数値だけで構成する",
      "主キーが2つ以上必要",
      "テーブルを暗号化すること"
    ],
    answer: "すべてのフィールドが単一の値のみを持つ",
    explanation: "1NFは表の各セルが分割できない単一値であることが条件。"
  },
  {
    question: "“第2正規形（2NF）”の特徴はどれか？",
    choices: [
      "主キーの一部にのみ依存する項目を分離する",
      "必ず外部キーを削除する",
      "データをすべてテキスト形式に変換する",
      "暗号化率を上げる"
    ],
    answer: "主キーの一部にのみ依存する項目を分離する",
    explanation: "2NFは部分関数従属の排除が目的。"
  },
  {
    question: "“第3正規形（3NF）”の特徴はどれか？",
    choices: [
      "主キー以外の項目に依存する項目を分離する",
      "必ず主キーを削除する",
      "データを暗号化する手法",
      "画像ファイルを保存する方法"
    ],
    answer: "主キー以外の項目に依存する項目を分離する",
    explanation: "3NFは推移的関数従属を排除し、構造をよりシンプルにする。"
  },
  {
    question: "“SQL”とは何の略称か？",
    choices: [
      "Structured Query Language",
      "Simple Question Language",
      "System Query Language",
      "Special Quality Language"
    ],
    answer: "Structured Query Language",
    explanation: "SQLはデータベースに対する問い合わせ言語。"
  },
  {
    question: "SQLでデータの検索に使うコマンドはどれか？",
    choices: [
      "SELECT",
      "INSERT",
      "UPDATE",
      "DELETE"
    ],
    answer: "SELECT",
    explanation: "SELECTは条件を指定してデータを検索・抽出する際に使う。"
  },
  {
    question: "SQLで新しいデータを追加するコマンドはどれか？",
    choices: [
      "INSERT",
      "SELECT",
      "UPDATE",
      "DROP"
    ],
    answer: "INSERT",
    explanation: "INSERTはテーブルに新規データを登録する命令。"
  },
  {
    question: "SQLでデータの更新に使うコマンドはどれか？",
    choices: [
      "UPDATE",
      "SELECT",
      "INSERT",
      "GRANT"
    ],
    answer: "UPDATE",
    explanation: "UPDATEは既存データの一部を変更・更新する命令。"
  },
  {
    question: "SQLでデータを削除する命令はどれか？",
    choices: [
      "DELETE",
      "INSERT",
      "UPDATE",
      "CREATE"
    ],
    answer: "DELETE",
    explanation: "DELETEはテーブル内の指定したデータを削除する。"
  },
  {
    question: "SQLでテーブル自体を削除する命令はどれか？",
    choices: [
      "DROP",
      "DELETE",
      "REMOVE",
      "TRUNCATE"
    ],
    answer: "DROP",
    explanation: "DROPはテーブルそのものをデータごと完全に削除する。"
  },
  {
    question: "SQLでテーブルを作成するコマンドはどれか？",
    choices: [
      "CREATE",
      "ALTER",
      "SELECT",
      "DROP"
    ],
    answer: "CREATE",
    explanation: "CREATEはテーブルなど新しいデータベースオブジェクトを作成する命令。"
  },
  {
    question: "“ビュー（View）”の特徴はどれか？",
    choices: [
      "1つまたは複数のテーブルから作成した仮想的な表",
      "必ず物理的なテーブルである",
      "画像ファイルの一種",
      "データの暗号化手法"
    ],
    answer: "1つまたは複数のテーブルから作成した仮想的な表",
    explanation: "ビューは実体を持たず、検索や権限制御などに利用できる。"
  },
  {
    question: "“インデックス”の役割はどれか？",
    choices: [
      "データ検索の速度を向上させるための仕組み",
      "必ずデータを暗号化するための機能",
      "テーブルの削除用機能",
      "主キーの別名"
    ],
    answer: "データ検索の速度を向上させるための仕組み",
    explanation: "インデックスは目次のようなもので、検索を効率化する。"
  },
  {
    question: "“トランザクション”の意味はどれか？",
    choices: [
      "一連の処理をまとめて行う単位",
      "テーブルの名前",
      "データのバックアップ専用",
      "画像圧縮処理"
    ],
    answer: "一連の処理をまとめて行う単位",
    explanation: "トランザクションは複数操作を一括処理し、データの整合性を保つための単位。"
  },
  {
    question: "“ACID特性”のAは何を表すか？",
    choices: [
      "Atomicity（原子性）",
      "Access（アクセス性）",
      "Arrange（整列性）",
      "Addition（加算性）"
    ],
    answer: "Atomicity（原子性）",
    explanation: "原子性はトランザクションが全て実行されるか全く実行されないかを保証。"
  },
  {
    question: "“ACID特性”のCは何を表すか？",
    choices: [
      "Consistency（一貫性）",
      "Capacity（容量性）",
      "Conversion（変換性）",
      "Create（作成性）"
    ],
    answer: "Consistency（一貫性）",
    explanation: "一貫性はデータの整合性を保つこと。"
  },
  {
    question: "“ACID特性”のIは何を表すか？",
    choices: [
      "Isolation（独立性）",
      "Insert（挿入性）",
      "Index（索引性）",
      "Identity（識別性）"
    ],
    answer: "Isolation（独立性）",
    explanation: "独立性は同時実行されるトランザクション同士が互いに影響しないこと。"
  },
  {
    question: "“ACID特性”のDは何を表すか？",
    choices: [
      "Durability（耐久性）",
      "Delete（削除性）",
      "Division（分割性）",
      "Display（表示性）"
    ],
    answer: "Durability（耐久性）",
    explanation: "耐久性はトランザクション完了後のデータが永続的に記録されること。"
  },
  {
    question: "“コミット”とはどのような操作か？",
    choices: [
      "トランザクションの内容を確定し、記録する",
      "トランザクションを中止する",
      "テーブルを暗号化する",
      "データを削除する"
    ],
    answer: "トランザクションの内容を確定し、記録する",
    explanation: "コミットは処理の完了を宣言し、データベースに反映させる。"
  },
  {
    question: "“ロールバック”の操作はどれか？",
    choices: [
      "トランザクション中の処理を取り消し、元の状態に戻す",
      "テーブルを新規作成する",
      "ビューを削除する",
      "検索結果を表示する"
    ],
    answer: "トランザクション中の処理を取り消し、元の状態に戻す",
    explanation: "ロールバックは誤操作や障害発生時に安全な状態へ戻すための操作。"
  },
  {
    question: "“デッドロック”の説明はどれか？",
    choices: [
      "複数の処理がお互いの完了を待ち続けることで進行しなくなる状態",
      "データの圧縮に失敗すること",
      "検索速度が速くなる状態",
      "データベースの容量が増加する現象"
    ],
    answer: "複数の処理がお互いの完了を待ち続けることで進行しなくなる状態",
    explanation: "デッドロックはリソースの取り合いによるシステム停止の一種。"
  },
  {
    question: "“バックアップ”の目的はどれか？",
    choices: [
      "データの消失や障害に備えてコピーを保存すること",
      "検索速度を上げること",
      "必ず暗号化を行うこと",
      "テーブルを削除すること"
    ],
    answer: "データの消失や障害に備えてコピーを保存すること",
    explanation: "バックアップは災害や誤操作によるデータ損失対策に不可欠。"
  },
  {
    question: "“リレーション”とは何か？",
    choices: [
      "複数のテーブル間の関連（つながり）を定義すること",
      "データの暗号化方式のこと",
      "検索速度の向上方法",
      "テーブルの削除命令"
    ],
    answer: "複数のテーブル間の関連（つながり）を定義すること",
    explanation: "リレーションは主キーと外部キーなどを用いてテーブル間の関連性を持たせる。"
  },
  {
    question: "“1対多のリレーション”の例として最も適切なものはどれか？",
    choices: [
      "1人の顧客が複数の商品を購入する関係",
      "1つの商品のみを複数人で所有する関係",
      "1人の顧客が1つの商品しか買わない関係",
      "データを必ず1つの表にまとめる関係"
    ],
    answer: "1人の顧客が複数の商品を購入する関係",
    explanation: "1対多（one-to-many）は代表的なリレーションで、現実の取引例にもよく登場する。"
  },
  {
    question: "“多対多のリレーション”を表現するために必要なものはどれか？",
    choices: [
      "中間テーブル",
      "ビュー",
      "主キーを2つ持つテーブル",
      "インデックスの削除"
    ],
    answer: "中間テーブル",
    explanation: "多対多は“注文テーブル”などの中間テーブルを挟んで表現する。"
  },
  {
    question: "“NULL値”の説明はどれか？",
    choices: [
      "値が未入力・未定義であることを示す特別な値",
      "必ず0を意味する値",
      "文字列の空白",
      "検索に使えない値"
    ],
    answer: "値が未入力・未定義であることを示す特別な値",
    explanation: "NULLは空白とも0とも異なり、値が“存在しない”ことを示す。"
  },
  {
    question: "“参照整合性”の目的はどれか？",
    choices: [
      "テーブル間の関連性が矛盾しないように保つこと",
      "検索速度を高めること",
      "必ず暗号化を行うこと",
      "データを削除すること"
    ],
    answer: "テーブル間の関連性が矛盾しないように保つこと",
    explanation: "参照整合性は、外部キーと主キーの関係が正しく保たれるようにする。"
  },
  {
    question: "“ユニーク制約”の説明として正しいものはどれか？",
    choices: [
      "同じ値が複数行に登録されないように制限するルール",
      "必ずNULL値を許可する制約",
      "テーブル全体を暗号化する制約",
      "主キーの削除を禁止する制約"
    ],
    answer: "同じ値が複数行に登録されないように制限するルール",
    explanation: "ユニーク制約は重複禁止のため、主キー以外にも設定できる。"
  },
  {
    question: "“カスケード更新”の特徴はどれか？",
    choices: [
      "親テーブルのキーが変更された場合、関連する外部キーも自動で変更される",
      "テーブル全体を暗号化する機能",
      "必ずデータを削除する機能",
      "ビューの自動作成機能"
    ],
    answer: "親テーブルのキーが変更された場合、関連する外部キーも自動で変更される",
    explanation: "カスケード更新はデータの一貫性を保つために利用される。"
  },
  {
    question: "“カスケード削除”の特徴はどれか？",
    choices: [
      "親テーブルのレコードが削除されると、関連する子テーブルのレコードも削除される",
      "必ずインデックスを削除する機能",
      "ビューを削除する機能",
      "暗号化キーを削除する機能"
    ],
    answer: "親テーブルのレコードが削除されると、関連する子テーブルのレコードも削除される",
    explanation: "カスケード削除はデータの参照整合性を保つために使われる。"
  },
  {
    question: "“ER図”の役割はどれか？",
    choices: [
      "データベース内のテーブルや関連性を図で表現する",
      "ネットワーク構成を示す図",
      "検索速度を上げる図",
      "ファイル構造を示す図"
    ],
    answer: "データベース内のテーブルや関連性を図で表現する",
    explanation: "ER図（エンティティ・リレーションシップ図）は、設計段階でよく使う。"
  },
  {
    question: "“エンティティ”の意味はどれか？",
    choices: [
      "データベースで管理する対象物（例：顧客、商品など）",
      "検索コマンドの略称",
      "暗号化対象データ",
      "データの削除命令"
    ],
    answer: "データベースで管理する対象物（例：顧客、商品など）",
    explanation: "エンティティはER図で四角で表現されることが多い。"
  },
  {
    question: "“属性”とは何か？",
    choices: [
      "エンティティが持つ項目（氏名、住所など）",
      "テーブルの主キー名",
      "インデックス名",
      "検索コマンド"
    ],
    answer: "エンティティが持つ項目（氏名、住所など）",
    explanation: "属性はエンティティの情報（フィールドやカラムに該当）。"
  },
  {
    question: "“リレーションシップ”の説明はどれか？",
    choices: [
      "エンティティ間の関係性を表すもの",
      "テーブルの列数",
      "主キーの種類",
      "暗号化方式"
    ],
    answer: "エンティティ間の関係性を表すもの",
    explanation: "リレーションシップは線や菱形で表現されることが多い。"
  },
  {
    question: "“データ型”の例で最も適切なものはどれか？",
    choices: [
      "整数型（int）、文字列型（varchar）、日付型（date）など",
      "ファイル型のみ",
      "ネットワーク型のみ",
      "暗号化型のみ"
    ],
    answer: "整数型（int）、文字列型（varchar）、日付型（date）など",
    explanation: "データ型は保存する値の種類に応じて選ぶ必要がある。"
  },
  {
    question: "“カラム”と同じ意味を持つ用語はどれか？",
    choices: [
      "フィールド",
      "レコード",
      "テーブル",
      "インデックス"
    ],
    answer: "フィールド",
    explanation: "カラム（列）はフィールドとも呼ばれる。"
  },
  {
    question: "“データベース管理システム（DBMS）”の主な役割はどれか？",
    choices: [
      "データベースの作成・管理・運用を支援するソフトウェア",
      "必ずファイル暗号化を行うシステム",
      "画像だけを保存するシステム",
      "データベースの削除のみ行うソフト"
    ],
    answer: "データベースの作成・管理・運用を支援するソフトウェア",
    explanation: "DBMSはOracleやMySQL、PostgreSQLなどが有名。"
  },
  {
    question: "“DBMS”の例として適切なものはどれか？",
    choices: [
      "Oracle Database、MySQL、PostgreSQLなど",
      "Windows Explorer",
      "Microsoft Excelのみ",
      "Photoshop"
    ],
    answer: "Oracle Database、MySQL、PostgreSQLなど",
    explanation: "これらは商用・オープンソースともに幅広く利用されているDBMS。"
  },
  {
    question: "“トランザクション管理”で利用される主な機能はどれか？",
    choices: [
      "コミットとロールバック",
      "必ずデータの暗号化",
      "ビューの削除",
      "カラム追加"
    ],
    answer: "コミットとロールバック",
    explanation: "トランザクション管理ではデータ整合性を保つためにこれらの操作が必要。"
  },
  {
    question: "“データ独立性”の意味はどれか？",
    choices: [
      "データの構造や物理的な保存方法を変更しても、アプリケーションへの影響が少ない",
      "データが暗号化されていること",
      "検索速度を上げること",
      "ユーザーごとにDBを独立運用すること"
    ],
    answer: "データの構造や物理的な保存方法を変更しても、アプリケーションへの影響が少ない",
    explanation: "データ独立性はDB設計の大きなメリット。"
  },
  {
    question: "“データベース言語”で「定義」に使うものはどれか？",
    choices: [
      "DDL（Data Definition Language）",
      "DML（Data Manipulation Language）",
      "DCL（Data Control Language）",
      "HTML"
    ],
    answer: "DDL（Data Definition Language）",
    explanation: "テーブルやインデックスの作成・変更・削除などの命令群。"
  },
  {
    question: "“DML（データ操作言語）”の例はどれか？",
    choices: [
      "SELECT、INSERT、UPDATE、DELETE",
      "CREATE、DROP",
      "GRANT、REVOKE",
      "VIEW、INDEX"
    ],
    answer: "SELECT、INSERT、UPDATE、DELETE",
    explanation: "DMLはデータの検索や操作を行う命令群。"
  },
  {
    question: "“DCL（データ制御言語）”の例はどれか？",
    choices: [
      "GRANT、REVOKE",
      "SELECT、INSERT",
      "CREATE、DROP",
      "VIEW、INDEX"
    ],
    answer: "GRANT、REVOKE",
    explanation: "DCLはアクセス権の設定や取り消しに使う。"
  },
  {
    question: "“スキーマ”の説明で正しいものはどれか？",
    choices: [
      "データベース全体の構造を定義したもの",
      "検索速度を上げるコマンド",
      "テーブルの別名",
      "主キーの種類"
    ],
    answer: "データベース全体の構造を定義したもの",
    explanation: "スキーマは設計図としての役割を持つ。"
  },
  {
    question: "“サブスキーマ”の目的はどれか？",
    choices: [
      "特定ユーザーやアプリケーションごとに必要な範囲のデータだけ見せること",
      "必ず全データを表示すること",
      "DBを物理的に分割すること",
      "検索速度を高めること"
    ],
    answer: "特定ユーザーやアプリケーションごとに必要な範囲のデータだけ見せること",
    explanation: "サブスキーマは業務ごとに最適な視点を設定できる。"
  },
  {
    question: "“並列処理”の説明はどれか？",
    choices: [
      "複数の処理を同時に実行し、全体の処理速度を高めること",
      "テーブルを暗号化すること",
      "検索結果を削除すること",
      "主キーの設定"
    ],
    answer: "複数の処理を同時に実行し、全体の処理速度を高めること",
    explanation: "並列処理は大量データの高速処理や同時アクセスに役立つ。"
  },
  {
    question: "“ロック”の目的はどれか？",
    choices: [
      "同時に同じデータが矛盾する更新をされないよう一時的に操作を制限すること",
      "データの暗号化を行うこと",
      "検索速度を高めること",
      "インデックスの追加"
    ],
    answer: "同時に同じデータが矛盾する更新をされないよう一時的に操作を制限すること",
    explanation: "ロックはデータの整合性や一貫性維持に重要な仕組み。"
  },
  {
    question: "“共有ロック”と“排他ロック”の違いとして正しいものはどれか？",
    choices: [
      "共有ロックは読み取り専用、排他ロックは書き込みも可能",
      "共有ロックは必ず書き込みもできる",
      "排他ロックは検索結果のみ表示できる",
      "両方ともデータの暗号化を行う"
    ],
    answer: "共有ロックは読み取り専用、排他ロックは書き込みも可能",
    explanation: "排他ロックはデータの更新や削除も許可する。"
  },
  {
    question: "“ACID特性”のA（Atomicity）の意味はどれか？",
    choices: [
      "トランザクション内の処理はすべて実行されるか、まったく実行されないかのどちらかである",
      "アクセス権の制御を行う",
      "必ず複数の処理を同時に行うこと",
      "自動的にインデックスを付与すること"
    ],
    answer: "トランザクション内の処理はすべて実行されるか、まったく実行されないかのどちらかである",
    explanation: "Atomicity（原子性）は処理の途中で止まらず、全体がまとまりとして実行されること。"
  },
  {
    question: "“ACID特性”のC（Consistency）の意味はどれか？",
    choices: [
      "トランザクション実行前後で一貫性が保たれる",
      "自動的にバックアップされる",
      "複数のユーザーでデータを共有できる",
      "アクセス速度が一定になる"
    ],
    answer: "トランザクション実行前後で一貫性が保たれる",
    explanation: "Consistency（一貫性）は整合性制約などが常に守られること。"
  },
  {
    question: "“ACID特性”のI（Isolation）の説明はどれか？",
    choices: [
      "複数のトランザクションの影響を受けずに独立して処理が進むこと",
      "自動的に暗号化されること",
      "必ず外部キー制約を使うこと",
      "毎回全データが書き換えられること"
    ],
    answer: "複数のトランザクションの影響を受けずに独立して処理が進むこと",
    explanation: "Isolation（独立性）は、同時実行時も互いに影響を与えないこと。"
  },
  {
    question: "“ACID特性”のD（Durability）の意味はどれか？",
    choices: [
      "トランザクションが完了したら、その結果が永続的に記録される",
      "必ずデータが消えること",
      "アクセス権の設定方法",
      "データ型の制約"
    ],
    answer: "トランザクションが完了したら、その結果が永続的に記録される",
    explanation: "Durability（永続性）は障害後も結果が失われないこと。"
  },
  {
    question: "“第1正規形”の説明として正しいものはどれか？",
    choices: [
      "すべての属性が単一値（アトミック値）である",
      "すべての属性がNULL値である",
      "主キーが必ず複数である",
      "全てのテーブルが暗号化される"
    ],
    answer: "すべての属性が単一値（アトミック値）である",
    explanation: "第1正規形では各カラムは単一値となる。"
  },
  {
    question: "“第2正規形”の特徴はどれか？",
    choices: [
      "主キー以外のすべての属性が主キーに完全従属している",
      "必ず主キーが複数ある",
      "外部キーのみで構成される",
      "テーブルを暗号化すること"
    ],
    answer: "主キー以外のすべての属性が主キーに完全従属している",
    explanation: "第2正規形は第1正規形を満たし、部分関数従属の排除が要件となる。"
  },
  {
    question: "“第3正規形”の条件として正しいものはどれか？",
    choices: [
      "主キー以外の属性が他の非キー属性に依存しない",
      "全ての属性がNULLである",
      "暗号化が必須となる",
      "ビューを必ず作成する"
    ],
    answer: "主キー以外の属性が他の非キー属性に依存しない",
    explanation: "第3正規形は推移的関数従属の排除が条件となる。"
  },
  {
    question: "“逆正規化”の目的はどれか？",
    choices: [
      "性能向上などのために正規化されたデータを意図的に元に戻すこと",
      "必ず暗号化を解除すること",
      "インデックスの削除",
      "主キーの変更"
    ],
    answer: "性能向上などのために正規化されたデータを意図的に元に戻すこと",
    explanation: "逆正規化は、速度や実用性を優先し意図的に冗長性を持たせる。"
  },
  {
    question: "“データウェアハウス（DWH）”の役割はどれか？",
    choices: [
      "大量のデータを蓄積し、分析や意思決定に活用するシステム",
      "必ずオンライン処理のみを行う",
      "ファイル暗号化だけを行う",
      "ネットワークの速度を向上させる"
    ],
    answer: "大量のデータを蓄積し、分析や意思決定に活用するシステム",
    explanation: "DWHはBI（ビジネスインテリジェンス）などに活用される。"
  },
  {
    question: "“OLAP”の説明で正しいものはどれか？",
    choices: [
      "多次元データの集計や分析を高速に行う技術",
      "オンラインショッピングサイトの略称",
      "必ずデータを暗号化する",
      "トランザクション管理専用の技術"
    ],
    answer: "多次元データの集計や分析を高速に行う技術",
    explanation: "OLAP（オンライン分析処理）はDWHでよく用いられる。"
  },
  {
    question: "“データマート”とは何か？",
    choices: [
      "部門や業務ごとに最適化した小規模なデータウェアハウス",
      "大規模なトランザクション処理システム",
      "ネットワークの設定情報",
      "暗号化アルゴリズム"
    ],
    answer: "部門や業務ごとに最適化した小規模なデータウェアハウス",
    explanation: "データマートはDWHを部門・用途別に分割したもの。"
  },
  {
    question: "“ETL”の意味はどれか？",
    choices: [
      "データの抽出・変換・格納（Load）を行う処理",
      "必ずデータ暗号化を行う処理",
      "ネットワーク通信制御の略称",
      "主キーと外部キーの作成処理"
    ],
    answer: "データの抽出・変換・格納（Load）を行う処理",
    explanation: "ETLはDWHやBIシステムで必須の前処理。"
  },
  {
    question: "“データベースチューニング”の目的はどれか？",
    choices: [
      "パフォーマンス向上や応答時間短縮のための最適化",
      "必ず主キーを削除すること",
      "暗号化を解除すること",
      "インデックスを全て削除すること"
    ],
    answer: "パフォーマンス向上や応答時間短縮のための最適化",
    explanation: "チューニングはSQL見直しやインデックス追加等で行われる。"
  },
  {
    question: "“分散データベース”の特徴はどれか？",
    choices: [
      "複数の場所・コンピュータに分散してデータを管理する仕組み",
      "必ず1台のサーバのみで運用する",
      "データを暗号化して転送することだけを指す",
      "ビューを分割すること"
    ],
    answer: "複数の場所・コンピュータに分散してデータを管理する仕組み",
    explanation: "分散DBは障害耐性やスケーラビリティに優れる。"
  },
  {
    question: "“レプリケーション”の主な目的はどれか？",
    choices: [
      "データベースの内容を他のサーバに複製して冗長化やバックアップを行う",
      "必ず暗号化されたデータのみを複製する",
      "インデックスの削除",
      "ビューの作成"
    ],
    answer: "データベースの内容を他のサーバに複製して冗長化やバックアップを行う",
    explanation: "レプリケーションは障害時の復旧や負荷分散にも有効。"
  },
  {
    question: "“バックアップ”の目的はどれか？",
    choices: [
      "障害時のデータ復旧やデータ損失防止のためにコピーを保存する",
      "検索速度を上げるためだけに保存する",
      "必ず全データを削除するために保存する",
      "インデックスの管理のためだけに保存する"
    ],
    answer: "障害時のデータ復旧やデータ損失防止のためにコピーを保存する",
    explanation: "バックアップは定期的な取得が重要。"
  },
  {
    question: "“リストア”の説明として正しいものはどれか？",
    choices: [
      "バックアップからデータを元の状態に戻す作業",
      "必ずデータを暗号化すること",
      "検索速度を上げる作業",
      "インデックスの削除"
    ],
    answer: "バックアップからデータを元の状態に戻す作業",
    explanation: "リストアは障害時や誤操作時の重要な復旧手段。"
  },
  {
    question: "“障害復旧（リカバリ）”の主な目的はどれか？",
    choices: [
      "データの損失や破損から迅速に正常な状態へ戻すこと",
      "必ず新しいテーブルを作成すること",
      "データを全て削除すること",
      "検索速度を高めること"
    ],
    answer: "データの損失や破損から迅速に正常な状態へ戻すこと",
    explanation: "リカバリはデータベース運用の安全性を高める。"
  },
  {
    question: "“クラウド型データベース”の特徴はどれか？",
    choices: [
      "インターネット経由でサービスとして利用でき、スケーラビリティが高い",
      "必ずオンプレミスのみで運用する",
      "暗号化は利用できない",
      "ローカルのみに保存する"
    ],
    answer: "インターネット経由でサービスとして利用でき、スケーラビリティが高い",
    explanation: "クラウド型DBはコスト削減や拡張性に優れる。"
  },
  {
    question: "“NoSQLデータベース”の特徴はどれか？",
    choices: [
      "テーブル構造にとらわれず柔軟なデータ管理ができる",
      "必ずリレーショナル型を採用している",
      "主キーが存在しない",
      "暗号化のみを目的とする"
    ],
    answer: "テーブル構造にとらわれず柔軟なデータ管理ができる",
    explanation: "NoSQLはビッグデータやWebサービスでよく用いられる。"
  },
  {
    question: "“ドキュメント指向データベース”の例はどれか？",
    choices: [
      "MongoDBやCouchDBなど",
      "MySQL",
      "Oracle Database",
      "Microsoft Excel"
    ],
    answer: "MongoDBやCouchDBなど",
    explanation: "ドキュメント指向DBはJSONやXML形式でデータを格納する。"
  },
  {
    question: "“キー・バリュー型データベース”の特徴はどれか？",
    choices: [
      "データをキーと値のペアで管理するシンプルな構造",
      "必ずテーブル構造を持つ",
      "SQLが必須となる",
      "ファイルのみで管理する"
    ],
    answer: "データをキーと値のペアで管理するシンプルな構造",
    explanation: "RedisやAmazon DynamoDBなどが代表的。"
  },
  {
    question: "“グラフ型データベース”の用途として適切なものはどれか？",
    choices: [
      "SNSの友人関係やネットワーク構造の管理",
      "写真ファイルの圧縮",
      "暗号化アルゴリズムの実装",
      "テキストデータの全文検索"
    ],
    answer: "SNSの友人関係やネットワーク構造の管理",
    explanation: "グラフ型DBはノードとエッジの関係性を直感的に管理できる。"
  },
  {
    question: "“カラム指向データベース”の特徴はどれか？",
    choices: [
      "列単位でデータを保存・処理するため集計や分析に強い",
      "必ず行単位で保存する",
      "主キーが不要となる",
      "暗号化の方式だけを管理する"
    ],
    answer: "列単位でデータを保存・処理するため集計や分析に強い",
    explanation: "分析系でよく使われる構造。"
  },
  {
    question: "“シャーディング”の説明として正しいものはどれか？",
    choices: [
      "大きなデータベースを複数のサーバに分割して管理する方法",
      "必ず暗号化して保存する方式",
      "全てのデータを1台のサーバで管理する方式",
      "バックアップの自動化方式"
    ],
    answer: "大きなデータベースを複数のサーバに分割して管理する方法",
    explanation: "シャーディングは水平分割とも呼ばれ、スケーラビリティ向上に寄与。"
  },
  {
    question: "“ベンチマークテスト”の目的はどれか？",
    choices: [
      "データベースシステムの性能や処理速度を測定・比較する",
      "必ず全データを暗号化するために行う",
      "データ型を判定するために行う",
      "インデックスの削除を評価するために行う"
    ],
    answer: "データベースシステムの性能や処理速度を測定・比較する",
    explanation: "システム選定やチューニングの指標に利用される。"
  },
  {
    question: "“RDBMS”の説明として最も正しいものはどれか？",
    choices: [
      "リレーショナルモデルを採用したデータベース管理システム",
      "画像ファイルだけを管理するシステム",
      "ファイルサーバ専用システム",
      "ネットワーク型データベースの略称"
    ],
    answer: "リレーショナルモデルを採用したデータベース管理システム",
    explanation: "RDBMSはリレーショナルデータベースを実現するためのソフトウェア（例：Oracle, MySQLなど）。"
  },
  {
    question: "“シーケンシャルアクセス”の説明として正しいものはどれか？",
    choices: [
      "データを順番にアクセスする方法",
      "データをランダムに取り出す方法",
      "必ずインデックス経由でアクセスする方法",
      "外部キーのみでアクセスする方法"
    ],
    answer: "データを順番にアクセスする方法",
    explanation: "シーケンシャル（逐次）アクセスはファイルやデータを一つ一つ順番に処理する方法。"
  },
  {
    question: "“ランダムアクセス”の説明はどれか？",
    choices: [
      "任意の位置に直接アクセスできる方法",
      "必ず順番にアクセスする方法",
      "主キー順のみでアクセスする方法",
      "外部キーのみでアクセスする方法"
    ],
    answer: "任意の位置に直接アクセスできる方法",
    explanation: "ランダムアクセスはデータの場所を指定して直接読み書きできる。"
  },
  {
    question: "“バッチ処理”の特徴はどれか？",
    choices: [
      "まとめて一括で大量のデータ処理を行う方式",
      "1件ずつリアルタイムで処理する方式",
      "必ず手作業で処理する方式",
      "インデックスを毎回削除する方式"
    ],
    answer: "まとめて一括で大量のデータ処理を行う方式",
    explanation: "バッチ処理は夜間の集計などでよく利用される。"
  },
  {
    question: "“オンライン処理”の特徴はどれか？",
    choices: [
      "利用者の操作に応じて即時にデータ処理を行う方式",
      "必ずまとめて処理を行う方式",
      "インデックスを毎回作成する方式",
      "手作業で処理する方式"
    ],
    answer: "利用者の操作に応じて即時にデータ処理を行う方式",
    explanation: "オンライン処理はATMやECサイトなどリアルタイム性が求められる場面で利用される。"
  },
  {
    question: "“2層クライアントサーバシステム”の特徴はどれか？",
    choices: [
      "クライアントとサーバの2階層で構成されるシステム",
      "必ず3つ以上の層で構成されるシステム",
      "ネットワークを使わないシステム",
      "バッチ専用システム"
    ],
    answer: "クライアントとサーバの2階層で構成されるシステム",
    explanation: "2層クライアントサーバはクライアントとDBサーバで完結する構成。"
  },
  {
    question: "“3層クライアントサーバシステム”の説明として正しいものはどれか？",
    choices: [
      "クライアント・アプリケーションサーバ・データベースサーバの3つで構成される",
      "必ず2層で構成されるシステム",
      "ネットワーク型DBの別名",
      "インデックスが不要な構成"
    ],
    answer: "クライアント・アプリケーションサーバ・データベースサーバの3つで構成される",
    explanation: "3層構造は処理負荷の分散やセキュリティ向上に有効。"
  },
  {
    question: "“トリガー”の役割はどれか？",
    choices: [
      "特定の操作（INSERT, UPDATE, DELETEなど）が行われた際に自動的に実行される処理",
      "手動で毎回実行する処理",
      "インデックスの作成命令",
      "ビューの削除命令"
    ],
    answer: "特定の操作（INSERT, UPDATE, DELETEなど）が行われた際に自動的に実行される処理",
    explanation: "トリガーはデータの整合性や監査用途でよく使われる。"
  },
  {
    question: "“ストアドプロシージャ”の特徴はどれか？",
    choices: [
      "あらかじめDBサーバに保存された一連のSQL処理",
      "必ずクライアント側で保存するもの",
      "ファイルの圧縮方式",
      "データの暗号化方式"
    ],
    answer: "あらかじめDBサーバに保存された一連のSQL処理",
    explanation: "ストアドプロシージャは再利用やメンテナンス性向上に役立つ。"
  },
  {
    question: "“参照制約違反”が発生するケースとして正しいものはどれか？",
    choices: [
      "子テーブルの外部キーに親テーブルに存在しない値を入れようとした場合",
      "主キーが重複した場合",
      "ビューを削除した場合",
      "データを暗号化した場合"
    ],
    answer: "子テーブルの外部キーに親テーブルに存在しない値を入れようとした場合",
    explanation: "参照整合性を保つため外部キーには親テーブルの主キー値しか設定できない。"
  },
  {
    question: "“NOT NULL制約”の意味はどれか？",
    choices: [
      "その項目には必ず値を入れなければならない制約",
      "必ずNULLを許容する制約",
      "主キーだけに設定する制約",
      "検索速度を上げる制約"
    ],
    answer: "その項目には必ず値を入れなければならない制約",
    explanation: "NOT NULLはデータの欠落や矛盾を防ぐために使う。"
  },
  {
    question: "“データベースのスケーラビリティ”とはどのような意味か？",
    choices: [
      "システムやデータ量が増えても容易に拡張できる性質",
      "必ず1台のサーバで運用する性質",
      "暗号化アルゴリズムの種類",
      "ビューの数を制限する性質"
    ],
    answer: "システムやデータ量が増えても容易に拡張できる性質",
    explanation: "スケーラビリティはクラウドや分散DBで特に重要視される。"
  },
  {
    question: "“データベースのスループット”の意味はどれか？",
    choices: [
      "一定時間内に処理できるデータ量",
      "バックアップの取得回数",
      "データの暗号化速度",
      "ファイルの圧縮率"
    ],
    answer: "一定時間内に処理できるデータ量",
    explanation: "スループットが高いほど多くの処理をこなせる。"
  },
  {
    question: "“データベースのレイテンシ”とは何か？",
    choices: [
      "処理や応答にかかる遅延時間",
      "必ず暗号化する時間",
      "インデックス作成の速度",
      "データ量の上限"
    ],
    answer: "処理や応答にかかる遅延時間",
    explanation: "レイテンシが短いほどユーザーの体感が良くなる。"
  },
  {
    question: "“フェールオーバー”の意味はどれか？",
    choices: [
      "システム障害時に自動的に待機系へ切り替える機能",
      "必ず手動で切り替えること",
      "データベースの一部を削除すること",
      "バックアップ取得時の手順"
    ],
    answer: "システム障害時に自動的に待機系へ切り替える機能",
    explanation: "フェールオーバーは高可用性システムで利用される。"
  },
  {
    question: "“ホットバックアップ”と“コールドバックアップ”の違いはどれか？",
    choices: [
      "ホットバックアップはDB稼働中に取得、コールドは停止中に取得",
      "コールドバックアップは暗号化のみを指す",
      "ホットバックアップはファイル型のみ取得できる",
      "両方とも同じ意味"
    ],
    answer: "ホットバックアップはDB稼働中に取得、コールドは停止中に取得",
    explanation: "可用性や業務継続性の観点から使い分ける。"
  },
  {
    question: "“データベースの分割”のメリットとして最も適切なものはどれか？",
    choices: [
      "アクセス分散や管理負担の軽減につながる",
      "必ず処理速度が低下する",
      "データの一貫性が保てなくなる",
      "暗号化が不要になる"
    ],
    answer: "アクセス分散や管理負担の軽減につながる",
    explanation: "分割は運用効率や拡張性向上に役立つ。"
  },
  {
    question: "“インメモリデータベース”の特徴はどれか？",
    choices: [
      "主にメインメモリ上にデータを保持し、高速処理が可能",
      "必ずHDDに保存すること",
      "暗号化専用DBである",
      "バックアップを取らない"
    ],
    answer: "主にメインメモリ上にデータを保持し、高速処理が可能",
    explanation: "一時的な大量データの高速処理用途で使われる。"
  },
  {
    question: "“データアーカイブ”の目的はどれか？",
    choices: [
      "利用頻度が低いデータを長期保存すること",
      "必ず全データを削除すること",
      "暗号化だけを目的とすること",
      "リアルタイム検索専用にすること"
    ],
    answer: "利用頻度が低いデータを長期保存すること",
    explanation: "法令対応や履歴管理のために利用される。"
  }
];
